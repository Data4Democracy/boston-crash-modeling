# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'Ubuntu-16.04'

steps:
- script: echo "conda --version"
  displayName: 'Run a one-line script'

- bash: |
    wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda.sh
    bash ~/miniconda.sh -b -p $HOME/miniconda
    export PATH="$HOME/miniconda/bin:$PATH"
    conda env create -f environment.yml
    source activate crash-model
  displayName: Create conda environment

#    set -euo pipefail
#    . /usr/share/miniconda/etc/profile.d/conda.sh
#    conda env create -f environment.yml
#    conda activate crash-model
#    echo Sucessfully activated
#  displayName: Create conda environment

- bash: |
    cd src
    pylint pipeline.py initialize_city.py data/*.py visualization/*.py data_standardization/*.py models/*.py features/*.py tools/*.py
    py.test --cov=./
  displayName: 'run tests'